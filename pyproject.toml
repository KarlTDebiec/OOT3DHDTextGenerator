[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length=88
target-version=['py311']

[tool.coverage.run]
data_file='coverage.coverage'
concurrency='multiprocessing'
parallel='True'

[tool.isort]
profile='black'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true

[tool.poetry]
name = "oot3dhdtextgenerator"
version = "0.2.0"
description = ""
authors = ["Karl T Debiec <karl.t.debiec@gmail.com>"]
license = "BSD"
include = ["pipescaler/data/**"]

[tool.poetry.dependencies]
python = "~3.11"
Flask = "^3.0.0"
pipescaler = {git = "https://github.com/KarlTDebiec/PipeScaler"}
h5py = "^3.10.0"
nvidia-cublas-cu11 = { version = "11.10.3.66", platform = 'linux' }
nvidia-cuda-cupti-cu11 = { version = "11.7.101", platform = 'linux' }
nvidia-cuda-nvrtc-cu11 = { version = "11.7.99", platform = 'linux' }
nvidia-cuda-runtime-cu11 = { version = "11.7.99", platform = 'linux' }
nvidia-cudnn-cu11 = { version = "8.5.0.96", platform = 'linux' }
nvidia-cufft-cu11 = { version = "10.9.0.58", platform = 'linux' }
nvidia-curand-cu11 = { version = "10.2.10.91", platform = 'linux' }
nvidia-cusolver-cu11 = { version = "11.4.0.1", platform = 'linux' }
nvidia-cusparse-cu11 = { version = "11.7.4.91", platform = 'linux' }
nvidia-nccl-cu11 = { version = "2.14.3", platform = 'linux' }
nvidia-nvtx-cu11 = { version = "11.7.91", platform = 'linux' }
torch = "^2.0.1"
torchinfo = "^1.8.0"
torchvision = "^0.15.2"
triton = { version = "2.0.0", platform = 'linux' }

[tool.poetry.dev-dependencies]
black = "^23.9.1"
coverage = "^7.3.2"
isort = "^5.12.0"
mypy = "^1.6.1"
pandas-stubs = "^2.0.1.230605"
prospector = "^1.10.3"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.1"
types-Pillow = "^10.1.0.0"

[tool.pydocstyle]
convention='google'

[tool.pylint.main]
fail-under=10.0
ignore=['CVS']
jobs=1
limit-inference-results=100
persistent=['yes']
py-version="3.11"
suggestion-mode=['yes']
unsafe-load-any-extension=['no']

[tool.pylint.messages_control]
disable=['raw-checker-failed', 'bad-inline-option', 'locally-disabled', 'file-ignored',
    'suppressed-message', 'useless-suppression', 'deprecated-pragma',
    'use-symbolic-message-instead', 'C0330', 'C0326']
enable=['c-extension-no-member']

[tool.pylint.reports]
evaluation=['10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)']
output-format=['text']
reports=['no']
score=['yes']

[tool.pylint.refactoring]
max-nested-blocks=5
never-returning-functions=['sys.exit', 'argparse.parse_error']

[tool.pylint.basic]
argument-naming-style=['snake_case']
attr-naming-style=['snake_case']
bad-names=['foo', 'bar', 'baz', 'toto', 'tutu', 'tata']
class-attribute-naming-style=['any']
class-const-naming-style=['UPPER_CASE']
class-naming-style=['PascalCase']
const-naming-style=['UPPER_CASE']
docstring-min-length=-1
function-naming-style=['snake_case']
good-names=['i', 'j', 'k', 'ex', 'Run', '_']
include-naming-hint=['no']
inlinevar-naming-style=['any']
method-naming-style=['snake_case']
module-naming-style=['snake_case']
no-docstring-rgx=['^_']
property-classes=['abc.abstractproperty']
variable-naming-style=['snake_case']

[tool.pylint.format]
ignore-long-lines=['^\s*(# )?<?https?://\S+>?$']
indent-after-paren=4
indent-string='    '
max-line-length=88
max-module-lines=1000
single-line-class-stmt=['no']
single-line-if-stmt=['no']

[tool.pylint.logging]
logging-format-style=['old']
logging-modules=['logging']

[tool.pylint.miscellaneous]
notes=['FIXME', 'XXX', 'TODO']

[tool.pylint.similarities]
ignore-comments=['yes']
ignore-docstrings=['yes']
ignore-imports=['no']
ignore-signatures=['no']
min-similarity-lines=4

[tool.pylint.spelling]
max-spelling-suggestions=4
spelling-ignore-comment-directives=['fmt: on', 'fmt: off', 'noqa:', 'noqa', 'nosec',
    'isort:skip', 'mypy:']
spelling-store-unknown-words=['no']

[tool.pylint.string]
check-quote-consistency=['no']
check-str-concat-over-line-jumps=['no']

[tool.pylint.typecheck]
contextmanager-decorators=['contextlib.contextmanager']
ignore-mixin-members=['yes']
ignore-none=['yes']
ignore-on-opaque-inference=['yes']
ignored-classes=['optparse.Values', 'thread._local', '_thread._local']
missing-member-hint=['yes']
missing-member-hint-distance=1
missing-member-max-choices=1
mixin-class-rgx=['.*[Mm]ixin']

[tool.pylint.variables]
allow-global-unused-variables=['yes']
callbacks=['cb_', '_cb']
dummy-variables-rgx=['_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_']
ignored-argument-names=['_.*|^ignored_|^unused_|kwargs']
init-import=['no']
redefining-builtins-modules=['six.moves', 'past.builtins', 'future.builtins', 'builtins',
    'io']

[tool.pylint.classes]
check-protected-access-in-special-methods=['no']
defining-attr-methods=['__init__', '__new__', 'setUp', '__post_init__']
exclude-protected=['_asdict', '_fields', '_replace', '_source', '_make']
valid-classmethod-first-arg=['cls']
valid-metaclass-classmethod-first-arg=['cls']

[tool.pylint.design]
max-args=5
max-attributes=7
max-bool-expr=5
max-branches=12
max-locals=15
max-parents=7
max-public-methods=20
max-returns=6
max-statements=50
min-public-methods=2

[tool.pylint.imports]
allow-wildcard-with-all=['no']
analyse-fallback-blocks=['no']
known-third-party=['enchant']

[tool.pylint.exceptions]
overgeneral-exceptions=['BaseException', 'Exception']

[tool.pytest.ini_options]
log_cli=true
log_cli_level="WARNING"
